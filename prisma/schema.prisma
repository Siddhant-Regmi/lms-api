// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  Borrow 
  Return
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  phone      String   @unique @db.VarChar(15)
  email      String   @unique @db.VarChar(191)
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  members Member[]

  @@map("users")
}
 model Book {
  id Int @id @default(autoincrement())
  title   String
  author String
  publisher String
  published_date DateTime
  isbn Int @unique
  category String
  available_copies Int @default(1)
  total_copies Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  transactions Transaction[]

  @@map("books")
 }

 model Member {
  id Int @id @default(autoincrement())
  user_id Int
  name String
  phone String
  address String 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("members")
 }

 model Transaction {
  id Int @id @default(autoincrement())
  deadline Int
  member_id Int
  book_id Int
  transaction_type TransactionType
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  member Member @relation(fields: [member_id], references: [id])
  book Book @relation(fields: [book_id], references: [id])

  @@map("transactions")
 }